{"ast":null,"code":"import { useState, useEffect } from \"react\";\n\nasync function getEmoji() {\n  try {\n    const response = await fetch(\"http://localhost:5000/search\");\n    return await response.json();\n  } catch (error) {\n    return [];\n  }\n}\n\nexport default function Filter() {\n  const [emojiList, setemojiList] = useState([]);\n\n  const fetchAllEmoji = () => {\n    getEmoji().then(users => {\n      console.log(users);\n      setEmojiList(users);\n    });\n  };\n\n  useEffect(() => {\n    getEmoji().then(response => response.json()).then(data => {\n      setEmojiList(data);\n      console.log(data);\n    });\n  }, []);\n  console.log(emojiList);\n  return fetchAllEmoji;\n}","map":{"version":3,"sources":["C:/Tringapps/emoji-search/src/userservices/userservice.js"],"names":["useState","useEffect","getEmoji","response","fetch","json","error","Filter","emojiList","setemojiList","fetchAllEmoji","then","users","console","log","setEmojiList","data"],"mappings":"AAAA,SAASA,QAAT,EAAkBC,SAAlB,QAAmC,OAAnC;;AACA,eAAeC,QAAf,GAA0B;AACtB,MAAG;AACC,UAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,8BAAD,CAA5B;AACA,WAAO,MAAMD,QAAQ,CAACE,IAAT,EAAb;AACH,GAHD,CAGC,OAAMC,KAAN,EAAa;AACV,WAAO,EAAP;AACH;AACJ;;AACD,eAAe,SAASC,MAAT,GAAiB;AAChC,QAAM,CAACC,SAAD,EAAWC,YAAX,IAAyBT,QAAQ,CAAC,EAAD,CAAvC;;AACA,QAAMU,aAAa,GAAG,MAAM;AACxBR,IAAAA,QAAQ,GACLS,IADH,CACQC,KAAK,IAAI;AACbC,MAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AACAG,MAAAA,YAAY,CAACH,KAAD,CAAZ;AACD,KAJH;AAKD,GANH;;AAOAX,EAAAA,SAAS,CAAC,MAAI;AACZC,IAAAA,QAAQ,GACPS,IADD,CACMR,QAAQ,IAAIA,QAAQ,CAACE,IAAT,EADlB,EAECM,IAFD,CAEMK,IAAI,IAAI;AACZD,MAAAA,YAAY,CAACC,IAAD,CAAZ;AACAH,MAAAA,OAAO,CAACC,GAAR,CAAYE,IAAZ;AACD,KALD;AAOD,GARQ,EAQP,EARO,CAAT;AASAH,EAAAA,OAAO,CAACC,GAAR,CAAYN,SAAZ;AACE,SAAOE,aAAP;AACD","sourcesContent":["import { useState,useEffect } from \"react\";\nasync function getEmoji() {\n    try{\n        const response = await fetch(\"http://localhost:5000/search\");\n        return await response.json();\n    }catch(error) {\n        return [];\n    }\n}\nexport default function Filter(){\nconst [emojiList,setemojiList]=useState([]);\nconst fetchAllEmoji = () => {\n    getEmoji()\n      .then(users => {\n        console.log(users)\n        setEmojiList(users);\n      });\n  }\nuseEffect(()=>{\n  getEmoji()\n  .then(response => response.json())\n  .then(data => {\n    setEmojiList(data)\n    console.log(data) \n  });\n \n},[]);\nconsole.log(emojiList);\n  return fetchAllEmoji;\n}"]},"metadata":{},"sourceType":"module"}